function transformOverlay(e, a) {
  var n = e.innerWidth(), s = e.innerHeight(), t = $("#canvasWrap").height(), r = $("#gameeFrameMobile").width(), o = r / 6.8 / 100, i = t / 5.36 / 100;
  a && (o = Math.min(o, i), i = o);
  var l = Math.round((r - n) / 2);
  Math.round((t - s) / 2 - 50);
  e.css({
    "-webkit-transform": "translate(" + l + "px, 0) scale3d(" + o + ", " + i + ", 1)",
    transform: " translate(" + l + "px, 0) scale3d(" + o + ", " + i + ", 1)"
  })
}
function transformElement(e) {
  var a = e.innerWidth(), s = (e.innerHeight(), $("#canvasWrap").height()), t = $("#gameeFrameMobile").width(), r = t / 6.8 / 100, o = s / 5.36 / 100, i = Math.round((t - a) / 2);
  r = Math.min(r, o), o = r, e.css({
    "-webkit-transform": "translateX(" + i + "px) scale3d(" + r + ", " + o + ", 1)",
    transform: " translateX(" + i + "px) scale3d(" + r + ", " + o + ", 1)"
  })
}
function transformControls(e, a) {
  var n = $("#controller"), s = e.innerWidth(), t = e.innerHeight(), r = (s - 190) / 2.7 / 100, o = t / 2.7 / 100;
  a && (r = Math.min(r, o), o = r), n.css({
    "-webkit-transform": "scale3d(" + r + ", " + o + ", 1)",
    transform: "scale3d(" + r + ", " + o + ", 1)"
  })
}
function transformControls2(e, a) {
  var n = $("#restart"), s = $("#play"), t = $("#control-resume"), r = $(".gameLoading"), o = e.innerWidth(), i = e.innerHeight(), l = o / 2 / 100, c = i / 1.52 / 100;
  a && (l = Math.min(l, c), c = l), l >= 1 && (l = 1, c = 1), n.css({
    "-webkit-transform": "scale3d(" + l + ", " + c + ", 1)",
    transform: "scale3d(" + l + ", " + c + ", 1)"
  }), s.css({
    "-webkit-transform": "scale3d(" + l + ", " + c + ", 1)",
    transform: "scale3d(" + l + ", " + c + ", 1)"
  }), t.css({
    "-webkit-transform": "scale3d(" + l + ", " + c + ", 1)",
    transform: "scale3d(" + l + ", " + c + ", 1)"
  }), r.css({"-webkit-transform": "scale3d(" + l + ", " + c + ", 1)", transform: "scale3d(" + l + ", " + c + ", 1)"})
}
function resizeElements(e, a) {
  var n = document.getElementById("gameeFrameMobile"), s = document.getElementById("canvasWrap"), t = document.getElementById("controls"), r = $(".overlay .inner"), o = $("#overlay-end"), i = $("#overlay-start");
  r.css("max-width", e + "px"), o.css("height", a + "px"), i.css("height", a + "px"), n.width = e, n.height = e, n.style.width = e + "px", n.style.height = e + "px", s.style.height = e + "px", s.style.width = e + "px", t.style.height = a - e + "px", transformOverlay($("#overlay-start .transform"), !0), transformOverlay($("#overlay-end .transform"), !0), transformElement($(".transform_score")), transformControls($("#controls"), !0), transformControls2($("#controls"), !0)
}
function preventDefault(e) {
  e = e || window.event, e.preventDefault && e.preventDefault(), e.returnValue = !1
}
function preventDefaultForScrollKeys(e) {
  return keys[e.keyCode] ? (preventDefault(e), !1) : void 0
}
function disableScroll() {
  window.addEventListener && window.addEventListener("DOMMouseScroll", preventDefault, !1), window.onwheel = preventDefault, window.onmousewheel = document.onmousewheel = preventDefault, window.ontouchmove = preventDefault, document.onkeydown = preventDefaultForScrollKeys, document.ontouchmove = function (e) {
    e.preventDefault()
  }, document.addEventListener("touchmove", function (e) {
    e.preventDefault()
  }, !1)
}
function enableScroll() {
  window.removeEventListener && window.removeEventListener("DOMMouseScroll", preventDefault, !1), window.onmousewheel = document.onmousewheel = null, window.onwheel = null, window.ontouchmove = null, document.onkeydown = null, document.ontouchmove = null
}
function defferedImg(e) {
  $(".defImg", "" + e).each(function () {
    var e = $(this);
    e.hide(), e.attr("src", e.data("src")), e.on("load", function () {
      e.fadeIn(280), e.parent().addClass("loaded")
    })
  })
}
var Game = {}, GameeBridge = {}, gameeUI = {}, timer, loc = window.localization,url;
window.scrollerConfigHorizontal = {
  scroll: "horizontal",
  lockOnDirection: "vertical"
}, window.scrollerConfigRelatedGames = {
  scroll: "horizontal",
  lockOnDirection: "vertical"
}, window.scrollerConfigVertical = {scroll: "vertical", lockOnDirection: "horizontal"}, Pace.on("done", function () {
  gameeUI.gameLoaded(), resizeElements(window.innerWidth, window.innerHeight), $(".preloader").hide();
  var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
  db.transaction(function (tx) {
    tx.executeSql('SELECT d.val FROM MYGAME d WHERE d.name="score"', [], function (tx, results) {
      var len = results.rows.length, i, result = '';
      if (results.rows && results.rows.length != 0) {
        var a = results.rows.item(0).val.split(",");
        url = a[4];
        gameeUI.gameLoaded(), resizeElements(window.innerWidth, window.innerHeight), $(".preloader").hide();
        var e = $(".gameFrame"), a = $("#gameeFrameMobile");
        navigator.userAgent.toLowerCase();
        a.attr("src", a.data("src")), Game = gameeGame(e[0]), Game2 = gamee2Game(e[0], gameeUI), gameeUI.gameLoader.show(), gameeUI.playBtn.hide(), window.addEventListener("resize", function () {
          resizeElements(document.body.offsetWidth, document.body.offsetHeight)
        })
      }
    });
  });
}), "addEventListener" in document && document.addEventListener("DOMContentLoaded", function () {
  FastClick.attach(document.body)
}, !1), disableScroll(), $(window).on("load", function () {
  var e = $(".gameFrame"), a = $("#gameeFrameMobile");
  navigator.userAgent.toLowerCase();
  a.attr("src", a.data("src")), Game = gameeGame(e[0]), Game2 = gamee2Game(e[0], gameeUI), gameeUI.gameLoader.show(), gameeUI.playBtn.hide(), /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && setTimeout(function () {
    Pace.stop()
  }, 1e3), $(document).on("click", ".rankings .seeAllBtn", function (e) {
    e.preventDefault(), gameeUI.fullRankings.show()
  }), $(".cRankingsBtn_close").on("click", function (e) {
    e.preventDefault(), gameeUI.fullRankings.hide()
  }), $(".subscribeDialog_close").on("click", function (e) {
    e.preventDefault(), gameeUI.subscribeDialog.hide(), gameeUI.sendMixpanelSubscribeAction("canceled")
  }), $(".beatenDialog_close").on("click", function (e) {
    e.preventDefault(), gameeUI.beatenDialog.hide()
  }), $(window).on("keypress", function (e) {
    (0 == e.keyCode || 32 == e.keyCode) && ("init" == gameeUI.currentState ? gameeUI.gameBegin() : "gameOver" == gameeUI.currentState && gameeUI.allowReplay && (gameeUI.gameRestart(), gameeUI.allowReplay = !1))
  }), $(".tab-link").on("click", function (e) {
    e.preventDefault();
    var a = $(this), n = a.data("href");
    $(".tab-link").removeClass("active"), a.addClass("active"), $(".tab").removeClass("visible"), $(".tab-" + n).addClass("visible"), "subscribe" === n && $(".badge", ".tab-link").fadeOut(200)
  }), window.addEventListener("resize", function () {
    resizeElements(document.body.offsetWidth, document.body.offsetHeight)
  })
}), window.addEventListener("orientationchange", function () {
  setTimeout(function () {
    resizeElements(document.body.offsetWidth, document.body.offsetHeight)
  }, 500)
}, !1);
var mql = window.matchMedia("(orientation: portrait)");
mql.matches || $("#alert").removeClass("hide").addClass("visible"), mql.addListener(function (e) {
  e.matches ? (enableScroll(), setTimeout(function () {
    resizeElements(document.body.offsetWidth, document.body.offsetHeight), $("#alert").removeClass("visible").addClass("hide")
  }, 1e3), "paused" === gameeUI.currentState && gameeUI.gameResume()) : (disableScroll(), $("#alert").removeClass("hide").addClass("visible"), "playing" === gameeUI.currentState && gameeUI.gamePause())
}), GameeBridge = {
  resume: function () {
    isGamee2() ? Game2.resume() : Game.resume()
  }, start: function () {
    isGamee2() ? Game2.start(!1) : ""
  }, pause: function () {
    isGamee2() ? Game2.pause() : Game.pause()
  }, restart: function () {
    isGamee2() ? Game2.start(!1) : Game.restart()
  }
}, gameeUI = {
  currentState: "init",
  gameMode: "normal",
  user: null,
  anonymous_id: null,
  firstPlay: !0,
  gameHighscore: 0,
  highscoreBeat: !1,
  playTime: 0,
  score: 0,
  myRank: null,
  myPhoto: null,
  gameplayCount: 0,
  offerSubscriptionIn: 5,
  gameeVer: 1,
  onboardingComplete: null,
  changeRank: !1,
  totalCountOfBeatenUsers: 0,
  facebookUserNotSubscribed: null,
  allowReplay: !1,
  beatenUsers: [],
  allRankings: {},
  gameLoaded: function () {
    var e = $("html");
    $(".gameFrame");
    var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
    db.transaction(function (tx) {
      tx.executeSql('SELECT d.val FROM MYGAME d WHERE d.name="score"', [], function (tx, results) {
        var len = results.rows.length, i, result = '';
        if (results.rows && results.rows.length != 0) {
          var a = results.rows.item(0).val.split(",");
          if (a[0] == "false") {
            $("#home").css("display", "none");
          }
        }
      });
    });
    e.addClass("loaded"), gameeUI.startOverlay.show()
  },
  init: function (e, a) {
    console.log("GameeJS - 2: init"), this.gameeVer = 2;
    var n = {
      controller: e.controller,
      capabilities: {saveState: void 0, replayData: void 0, socialData: void 0},
      sound: !0
    };
    a(n)
  },
  gameReady: function () {
    console.log("GameeJS 2: ready"), gameeUI.gameLoader.hide(), gameeUI.playBtn.show()
  },
  requestSocial: function () {
    console.log("GameeJS 2: Socials requested")
  },
  saveState: function () {
    console.log("GameeJS 2: save state")
  },
  gameStart: function () {
    console.log("Game Start"), gameeUI.currentState = "playing", gameeUI.timer.start(), gameeUI.updateScore(0), isGamee2() && GameeBridge.start(!1)
  },
  gameBegin: function () {
    gameeUI.startOverlay.hide(), gameeUI.playBtn.hide(), gameeUI.controls.show(), isGamee2() && gameeUI.gameStart()
  },
  gameOver: function () {
    var e = parseInt($(".totalScore").html());
    parseInt($(".highscore").html());
    gameeUI.currentState = "gameOver", gameeUI.timer.stop();
    var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
    db.transaction(function (tx) {
      tx.executeSql('SELECT d.val FROM MYGAME d WHERE d.name="score"', [], function (tx, results) {
        var len = results.rows.length, i, result = '';
        if (results.rows && results.rows.length != 0) {
          var a = results.rows.item(0).val.split(",");
          if (a[0] == "false" && a[3] === "0") {
            a[3] = e;
            tx.executeSql('UPDATE MYGAME SET val=? WHERE name= "score"', [a.join(",")], function (tx, results) {
              gameeUI.gameplayCount++, window.scroller5 && window.scroller5.scrollToTop(), $("#overlay-end .rankings, #overlay-end .ranks-wrap").removeClass("visible"), gameeUI.currentState = "gameOver", gameeUI.highscoreBeat = !1, gameeUI.onboardingComplete = !0, gameeUI.setScoreCustomText(""), gameeUI.overlay.show(), gameeUI.controls.hide(), $(".rankingsFailed").hide(), setTimeout(function () {
                gameeUI.restartBtn.show()
              }, 500), gameeUI.timer.stop(), $("#control-restart").css("display", "none"), $(".control-fs-restart").css("display", "none")
            });
          } else {
            gameeUI.gameplayCount++, window.scroller5 && window.scroller5.scrollToTop(), $("#overlay-end .rankings, #overlay-end .ranks-wrap").removeClass("visible"), gameeUI.currentState = "gameOver", gameeUI.highscoreBeat = !1, gameeUI.onboardingComplete = !0, gameeUI.setScoreCustomText(""), gameeUI.overlay.show(), gameeUI.controls.hide(), $(".rankingsFailed").hide(), setTimeout(function () {
              gameeUI.restartBtn.show()
            }, 500), gameeUI.saveScore(gameeUI.score), gameeUI.timer.stop(), gameeUI.submitRecord.send(a[1], e, a[2], a[5]);
          }
        }
      });
    });
  },
  gameRestart: function () {
    GameeBridge.restart(), gameeUI.overlay.hide(), gameeUI.controls.show(), gameeUI.restartBtn.hide(), $("#overlay-end .rankings .item").css("opacity", "0"), $(".ranks-wrap").removeClass("visible")
  },
  gamePause: function () {
    gameeUI.currentState = "paused", GameeBridge.pause(), gameeUI.overlayPause.show(), gameeUI.controls.hide(), gameeUI.resumeBtn.show(), $(".your_score").addClass("paused"), gameeUI.timer.pause()
  },
  gameResume: function () {
    gameeUI.currentState = "playing", gameeUI.overlayPause.hide(), gameeUI.timer.resume(), gameeUI.resumeBtn.hide(), gameeUI.controls.show(), $(".your_score").removeClass("paused"), GameeBridge.resume()
  },
  setController: function (e) {
    gameeUI.gameLoader.hide(), gameeUI.playBtn.show()
  },
  checkFbStatus: function (e) {
    gameeUI.myPhoto = e.photo
  },
  updateScore: function (e) {
    var a = $(".totalScore");
    gameeUI.score = e, a.html(parseInt(e)), gameeUI.checkRankStatus(e)
  },
  updateOverall: function (e) {
    gameGlobals.overallScore = e
  },
  updateHighscore: function (e) {
    gameeUI.score > gameeUI.gameHighscore && (gameeUI.gameHighscore = e, gameeUI.firstPlay = !1)
  },
  checkRankStatus: function (e) {
    var r, a = gameeUI.gameHighscore, n = $(".rankStatus"), s = $(".inner", ".rankStatus"), t = '<div class="highscore"><span class="ic"></span> ' + loc.highscoreBeat + "</div>", o = gameeUI.highscoreBeat, i = gameeUI.allRankings, l = i.length - 1;
    e > a && e > 0 && o === !1 && gameeUI.firstPlay === !1 && (s.html(t), r = !0, gameeUI.highscoreBeat = !0), 0 != Object.keys(i).length && e > i[l].score && (gameeUI.onboardingComplete ? gameeUI.highscoreBeat === !0 && gameeUI.myRank !== i[l].rank && (s.html('<div class="person"><img src="' + addProfilePicture(i[l].profile_picture) + '" class="pic" width="18" /> <span class="name">' + htmlspecialchars(i[l].username) + "</span> " + loc.beat + "</div>"), r = !0) : (s.html('<div class="person"><img src="' + addProfilePicture(i[l].profile_picture) + '" class="pic" width="18" /> <span class="name">' + htmlspecialchars(i[l].username) + "</span> " + loc.beat + "</div>"), r = !0), gameeUI.changeRank = !0, gameeUI.totalCountOfBeatenUsers++, gameeUI.beatenUsers.push(i[l]), i.splice(l)), r && (n.show(), setTimeout(function () {
      n.hide(), r = !1
    }, 2200))
  },
  setScoreCustomText: function (e) {
    $(".custom_text", ".your_score").html(e)
  },
  overlay: {
    show: function () {
      $(window).focus(), $("#canvasWrap").addClass("overlayVisible"), $("#overlay-end").addClass("visible"), $("#controls").addClass("visible")
    }, hide: function () {
      $("#canvasWrap").removeClass("overlayVisible"), $("#overlay-end").removeClass("visible"), $("#controls").removeClass("visible"), $("#gameeFrameMobile").focus()
    }
  },
  overlayPause: {
    show: function () {
      $("#canvasWrap").addClass("overlayVisible"), $("#overlay-pause").addClass("visible"), $("#controls").addClass("visible")
    }, hide: function () {
      $("#canvasWrap").removeClass("overlayVisible"), $("#overlay-pause").removeClass("visible"), $("#controls").removeClass("visible")
    }
  },
  submitRecord: {
    send: function (id, score, token, u) {
      var request = $.ajax({
        url: "https://dagala.cfapps.io/api/1/submitRecord",
        type: "POST",
        contentType: "application/json",
        headers: {"Authorization": token},
        data: JSON.stringify({gameId: id, score: score, user: u})
      });
      request.done(function (msg) {
        var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
        db.transaction(function (tx) {
          tx.executeSql('DELETE FROM MYGAME WHERE name="wasInGame"', [], function (tx, results) {
            tx.executeSql('INSERT INTO MYGAME (name, val) VALUES (?, ?)', ["wasInGame", true]);
          });
        });
      });
      request.fail(function (jqXHR, textStatus) {
        $(".alert").css("display", "block");
        setTimeout(function () {
          $(".alert").css("display", "none");
        }, 3000);
      });
    }
  },
  startOverlay: {
    show: function () {
      $(window).focus(), $("#canvasWrap").addClass("overlayVisible"), $("#overlay-start").addClass("visible"), $("#controls").addClass("visible")
    }, hide: function () {
      $("#canvasWrap").removeClass("overlayVisible"), $("#overlay-start").removeClass("visible"), $("#controls").removeClass("visible"), $("#overlay-start .ranks-wrap").removeClass("visible"), $("#gameeFrameMobile").focus()
    }
  },
  controls: {
    show: function () {
      $("#controller").addClass("visible")
    }, hide: function () {
      $("#controller").removeClass("visible")
    }
  },
  loading: {
    show: function (e) {
      e.show()
    }, hide: function (e) {
      e.hide()
    }
  },
  ranksLoading: {
    show: function () {
      $(".spinner", ".rankings").show()
    }, hide: function () {
      $(".spinner", ".rankings").hide()
    }
  },
  shareLoading: {
    show: function () {
      $(".challenge-friends").prepend('<span class="spinner"></span>')
    }, hide: function () {
      $(".spinner", ".challenge-friends").remove()
    }
  },
  gameLoader: {
    show: function () {
      $(".gameLoading").remove(), $("#controls .cWrap").append('<div class="gameLoading"><div class="icn"></div></div>'), $("#overlay-start .inner").append('<div class="gameLoading fs-loading"><div class="icn"></div></div>')
    }, hide: function () {
      $(".gameLoading").remove(), $("#overlay-start .rankings").addClass("loaded").removeClass("loading"), $("#overlay-start .ranks-wrap").addClass("loaded")
    }
  },
  restartBtn: {
    show: function () {
      $(".cLayout.restart, .control-fs-restart").addClass("visible")
    }, hide: function () {
      $(".cLayout.restart, .control-fs-restart").removeClass("visible")
    }
  },
  playBtn: {
    show: function () {
      $(".cLayout.play, .control-fs-play").addClass("visible")
    }, hide: function () {
      $(".cLayout.play, .control-fs-play").removeClass("visible")
    }
  },
  resumeBtn: {
    show: function () {
      $(".cLayout.resume, .control-fs-resume").addClass("visible")
    }, hide: function () {
      $(".cLayout.resume, .control-fs-resume").removeClass("visible")
    }
  },
  fullRankings: {
    show: function () {
      $("#overlay-standing .in").css("max-height", document.body.offsetHeight - 130 + "px"), $("#gameeMobile #overlay-standing").addClass("visible"), gameeUI.getFullRankings()
    }, hide: function () {
      disableScroll(), $("#gameeMobile #overlay-standing").removeClass("visible")
    }
  },
  subscribeDialog: {
    show: function () {
      $("#gameeMobile #overlay-subscribe").addClass("visible")
    }, hide: function () {
      $("#gameeMobile #overlay-subscribe").removeClass("visible")
    }
  },
  beatenDialog: {
    show: function () {
      var s, e = Object.keys(gameeUI.beatenUsers).length, a = gameeUI.beatenUsers, n = "";
      $(".numberOfBeaten", "#overlay-beaten").html(gameeUI.totalCountOfBeatenUsers), $(".rankings .items .item", "#overlay-beaten").remove(), $("#gameeMobile #overlay-beaten").addClass("visible"), $(".myProfileAvatar", "#overlay-beaten").attr("src", gameeUI.myPhoto), $(".myRank", "#overlay-beaten").html(gameeUI.gameHighscore), $(".crown", "#overlay-beaten").addClass("show");
      for (var t in a)n += '<div class="item"><span class="emojiCrying">😭</span><div class="pic_wrap"><img data-src="' + addProfilePicture(a[t].profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>' + formatUsername(a[t].username) + '</span></div><div class="points">' + a[t].score + "</div></div>", 1 === a.length && (s = getFirstName(a[t].username));
      1 === gameeUI.totalCountOfBeatenUsers ? ($(".friendsText", "#overlay-beaten").html(loc.friend), $(".letWho", "#overlay-beaten").html()) : ($(".friendsText", "#overlay-beaten").html(loc.friends), $(".letWho", "#overlay-beaten").html("them")), $("#overlay-beaten .rankings .items").append(n), setTimeout(function () {
        defferedImg("#overlay-beaten")
      }, 100), e > 4 && (window.beatenScroller = new Scroller("#overlay-beaten .scrollArea", scrollerConfigHorizontal))
    }, hide: function () {
      $("#gameeMobile #overlay-beaten").removeClass("visible"), window.beatenScroller && (window.beatenScroller.destroy(), $("#overlay-beaten .scrollerWrap").removeClass("scroller-wrapper scroll-vertical"), $("#overlay-beaten .scrollerIn").removeClass("scroller"), $("#overlay-beaten .scrollerIn").removeAttr("style"))
    }
  },
  timer: {
    start: function () {
      timer = setInterval(function () {
        ++gameeUI.playTime
      }, 1e3)
    }, pause: function () {
      clearTimeout(timer)
    }, resume: function () {
      timer = setInterval(function () {
        ++gameeUI.playTime
      }, 1e3)
    }, stop: function () {
      clearTimeout(timer), gameeUI.playTime = 0
    }
  },
  sendMixpanel: function (e) {
    mixpanel.track("Game Played", {
      "game name": gameGlobals.game_name,
      "game genre": gameGlobals.game_genre,
      "game score": e,
      "game play time": gameeUI.playTime,
      source: gameGlobals.game_source,
      "web version": "mobile",
      mode: gameeUI.gameMode
    })
  },
  sendMixpanelShare: function (e, a, n, s) {
    mixpanel.track("Web Game Shared", {
      type: e,
      screen: a,
      "web version": n,
      "game name": gameGlobals.game_name,
      "button variant": s
    })
  },
  sendMixpanelSubscribeAction: function (e) {
    mixpanel.track("telegram Subscribe Dialog Shown", {action: e})
  },
  setGameOverRankings: function (e) {
    var a = e.result.ranking, n = 0 != Object.keys(a.beforeMe).length ? a.beforeMe : "", s = Object.keys(n).map(function (e) {
      return n[e]
    }), t = s.reverse(), r = 0 != Object.keys(a.afterMe).length ? a.afterMe : "", o = Object.keys(r).map(function (e) {
      return r[e]
    }), i = o.reverse(), l = a.me, c = "", d = "", m = "", g = "", u = "", f = "", v = "", p = Object.keys(n).length + Object.keys(r).length + 1, b = '<div class="item vs ' + onPlatform() + '"><span class="vsWrap"><span class="vsText">vs</span></span></div>', w = "";
    if (p > 4 && (w = '<div class="item seeAllBtn"><div class="pic_wrap"><img src="../detail/assets/svg/icn-see-all.svg" class="pic" /><img src="../detail/assets/svg/icn-see-all-active.svg" class="pic pressed" /></div><div class="username"><span>' + loc.seeAll + '</span></div><div class="points"></div></div>'), gameeUI.changeRank === !0 && p > 2 ? $("#overlay-end .rankings .items").addClass("rankChanged") : $("#overlay-end .rankings .items").removeClass("rankChanged"), $("#overlay-end .rankings .items .item").remove(), 0 != Object.keys(a.afterMe).length) {
      var k = 1, y = Object.keys(a.afterMe).length;
      for (var U in i) {
        var I = "";
        gameeUI.changeRank === !0 && 1 === l.rank && 2 === i[U].rank && (I = '<span class="crown hide">👑</span>'), d += '<div class="item afterMeItem-' + y + '"><div class="pic_wrap">' + I + '<img data-src="' + addProfilePicture(i[U].profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>' + formatUsername(i[U].username) + '</span></div><div class="points">' + i[U].score + "</div></div>", k++, y--
      }
    }
    if (0 != Object.keys(a.me).length) {
      var C = "";
      1 === l.rank && (C = '<span class="crown show">👑</span>'), meRankTpl = '<div class="item me"><div class="pic_wrap">' + C + '<img data-src="' + addProfilePicture(l.profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>You</span></div><div class="points">' + (l.score ? l.score : "-") + "</div></div>"
    }
    if (2 >= p ? ($(".rankings .headline").html(""), $(".rankings").addClass("vsMode"), 1 === p && (m = b), 0 === Object.keys(a.beforeMe).length && 1 === Object.keys(a.afterMe).length && (g = b, f = meRankTpl, meRankTpl = ""), 1 === Object.keys(a.beforeMe).length && 0 === Object.keys(a.afterMe).length && (u = b)) : ($(".rankings").removeClass("vsMode"), $(".rankings .headline").html(loc.leaderboards)), (1 === p || 3 === p) && (v += '<div class="item friend challenge-friends ' + onPlatform() + '"><div class="pic_wrap"><img src="../detail/assets/svg/find-friends-plus.svg" class="pic" /><img src="../detail/assets/svg/add_players_pressed.svg" class="pic pressed" /></div><div class="username"><span>Add players</span></div><div class="points">-</div></div>'), 0 != Object.keys(a.beforeMe).length) {
      var k = 0;
      for (var U in t) {
        var I = "";
        k++, 1 === t[U].rank && (I = '<span class="crown show">👑</span>'), gameeUI.changeRank === !0 && 1 === l.rank && 2 === t[U].rank && (I = '<span class="crown hide">👑</span>'), c += '<div class="item beforeMeItem-' + k + '"><div class="pic_wrap">' + I + '<img data-src="' + addProfilePicture(t[U].profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>' + formatUsername(t[U].username) + '</span></div><div class="points">' + t[U].score + "</div></div>"
      }
    }
    window.scroller5 && (window.scroller5.destroy(), $("#overlay-end .scrollerWrap").removeClass("scroller-wrapper scroll-vertical"), $("#overlay-end .scrollerIn").removeClass("scroller"), $("#overlay-end .scrollerIn").removeAttr("style")), window.scroller2 && window.scroller2.destroy(), $("#overlay-end .rankings .items").append(f + g + d + meRankTpl + u + c + m + v + w), p > 4 && (window.scroller2 = new Scroller("#overlay-end .rankings .scrollArea", scrollerConfigHorizontal)), window.scroller5 = new Scroller("#overlay-end .scrollerWrap", scrollerConfigVertical), window.scroller5._startMoveRAF(0), window.scroller5.scrollToTop(), window.scroller5.scrollToTop(), gameeUI.changeRank = !1, defferedImg("#overlay-end"), window.dispatchEvent(new Event("resize"))
  },
  setStartRankings: function (e) {
    var a = e.result.ranking, n = 0 != Object.keys(a.beforeMe).length ? a.beforeMe : "", s = Object.keys(n).map(function (e) {
      return n[e]
    }), t = s.reverse(), r = 0 != Object.keys(a.afterMe).length ? a.afterMe : "", o = Object.keys(r).map(function (e) {
      return r[e]
    }), l = o.reverse(), c = a.me, d = a.onboardingComplete, m = "", g = "", u = "", f = "", v = "", p = "", h = "", b = "", w = '<span class="crown show">👑</span>', k = Object.keys(n).length + Object.keys(r).length + 1, y = '<div class="item vs ' + onPlatform() + '"><span class="vsWrap"><span class="vsText">vs</span></span></div>', U = "";
    if (gameeUI.onboardingComplete = d, k > 4 && (U = '<div class="item seeAllBtn"><div class="pic_wrap"><img src="../detail/assets/svg/icn-see-all.svg" class="pic" /><img src="../detail/assets/svg/icn-see-all-active.svg" class="pic pressed" /></div><div class="username"><span>' + loc.seeAll + '</span></div><div class="points"></div></div>'), $("#overlay-start .rankings .items .item").remove(), 0 != Object.keys(a.afterMe).length)for (var I in l)g += '<div class="item"><div class="pic_wrap"><img data-src="' + addProfilePicture(l[I].profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>' + formatUsername(l[I].username) + '</span></div><div class="points">' + l[I].score + "</div></div>";
    if (0 != Object.keys(a.me).length) {
      var _, S = "";
      c.score > 0 && ($(".userHighscore").html(parseInt(c.score)), gameeUI.gameHighscore = parseInt(c.score), gameeUI.firstPlay = !1, 1 === c.rank && (S = w), $(".myCurrentScore", ".rankings").html(c.score), $(".yourHighscore", ".rankings").show()), isFacebook() ? _ = gameeUI.myPhoto : c.profile_picture && (_ = c.profile_picture), meRankTpl = '<div class="item me"><div class="pic_wrap">' + S + '<img data-src="' + addProfilePicture(_) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>You</span></div><div class="points">' + (c.score ? c.score : "-") + "</div></div>"
    }
    if (2 >= k ? ($(".rankings").addClass("vsMode"), $(".rankings .headline").html(""), 1 === k && (u = y), 0 === Object.keys(a.beforeMe).length && 1 === Object.keys(a.afterMe).length && (v = y, p = meRankTpl, meRankTpl = ""), 1 === Object.keys(a.beforeMe).length && 0 === Object.keys(a.afterMe).length && (f = y)) : ($(".rankings").removeClass("vsMode"), $(".rankings .headline").html(loc.leaderboards)), (1 === k || 3 === k) && (h += '<div class="item friend challenge-friends ' + onPlatform() + '"><div class="pic_wrap"><img src="../detail/assets/svg/find-friends-plus.svg" class="pic" /><img src="../detail/assets/svg/add_players_pressed.svg" class="pic pressed" /></div><div class="username"><span>Add players</span></div><div class="points">-</div></div>'), 0 != Object.keys(a.beforeMe).length) {
      d === !1 && (b = "steve"), i = 0;
      for (var I in t) {
        var G = "";
        i++, 1 === t[I].rank && (G = w), m += '<div class="item ' + b + '"><div class="pic_wrap">' + G + '<img data-src="' + addProfilePicture(t[I].profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>' + formatUsername(t[I].username) + '</span></div><div class="points">' + t[I].score + "</div></div>"
      }
    }
    $("#overlay-start .rankings .items").append(p + v + g + meRankTpl + f + m + u + h + U), k > 4 && (window.scroller1 = new Scroller("#overlay-start .rankings .scrollArea", scrollerConfigHorizontal)), window.scroller6 || (window.scroller6 = new Scroller("#overlay-start .scrollerWrap", scrollerConfigVertical)), defferedImg(".rankings"), transformOverlay($("#overlay-start .transform"), !0), window.dispatchEvent(new Event("resize"))
  },
  saveScore: function (e) {
    var a = window.location.pathname, n = gameeUI.user, s = (new Date).getTime(), t = $("#dataId").data(), r = CryptoJS.AES.encrypt(JSON.stringify({
      score: e,
      timestamp: s
    }), t.id, {format: CryptoJSAesJson}).toString(), o = {
      score: e,
      url: a,
      play_time: gameeUI.playTime,
      hash: r,
      username: n,
      anonymous_id: gameeUI.anonymous_id
    };
    if (isFacebook()) {
      var i = FacebookUserData.getUserData();
      o.app_scoped_user_id = i.app_scoped_user_id, o.user_id = i.user_id
    }
    gameeUI.sendScoreData(o)
  },
  sendScoreData: function (e) {
    var a = JSON.stringify(e), n = $(".rankingsFailed"), s = getBotsApiUrl() + "/set-web-score-qkfnsog26w7173c9pk7whg0iau7zwhdkfd7ft3tn";
    gameeUI.ranksLoading.show(), $("#overlay-end .rankings .items .item").remove(), $("#overlay-end .rankings, #overlay-end .ranks-wrap").addClass("visible"), $.ajax({
      type: "POST",
      url: s,
      data: a,
      success: function (e) {
        gameeUI.ranksLoading.hide(), isBot() && (isEmpty(e.result.ranking) || (gameeUI.setGameOverRankings(e), gameeUI.saveRankingsToObject(e))), $(".this-share").addClass("visible")
      },
      error: function (e, a) {
        gameeUI.ranksLoading.hide(), n.show(), window.scroller5 || (window.scroller5 = new Scroller("#overlay-end .scrollerWrap", scrollerConfigVertical))
      },
      timeout: 1e4,
      dataType: "json",
      crossDomain: !0
    })
  },
  setFullRankings: function (e) {
    var a = e.result.ranking, n = null === e.result.myRank ? "0" : e.result.myRank;
    e.result.membersCount;
    if (Object.keys(a).length > 0) {
      for (var t in a) {
        var r = a[t].rank === n ? "You" : "", i = a[t].profile_picture;
        $("#overlay-standing .items").append('<div class="row ' + r + '"><div class="line"><div class="number">' + a[t].rank + '.</div><div class="pic_wrap"><div class="pic_in"><img data-src="' + addProfilePicture(i) + '" class="pic defImg" onerror="this.src=\'../detail/assets/png/avatar-placeholder.png\';" /></div></div><div class="name"><span>' + htmlspecialchars(a[t].username) + '</span></div><div class="points">' + a[t].score + "</div></div></div>")
      }
      window.fullRankScroller ? window.fullRankScroller.scrollToTop() : window.fullRankScroller = new Scroller("#overlay-standing .area", scrollerConfigVertical), defferedImg("#overlay-standing")
    }
  },
  saveRankingsToObject: function (e) {
    var a = e.result.ranking.beforeMe, n = Object.keys(a).map(function (e) {
      return a[e]
    }), s = null === e.result.ranking.me.rank ? "0" : e.result.ranking.me.rank;
    Object.keys(a).length > 0 && (gameeUI.allRankings = n, gameeUI.myRank = s)
  },
  getFullRankings: function () {
    var e = window.location.pathname, a = gameeUI.user, n = getBotsApiUrl() + "/api/game-url-ranking", s = $("#overlay-standing .spinner"), t = {url: escape(e)};
    null != gameeUI.anonymous_id && (a = ""), isFacebook() && (t.facebook_user_id = FacebookUserData.getUserData().app_scoped_user_id), isKik() && (t.username = a), $("#overlay-standing .items .row").remove(), gameeUI.loading.show(s), $.ajax({
      type: "GET",
      url: n,
      data: t,
      xhrFields: {withCredentials: !0},
      success: function (e) {
        setTimeout(function () {
          gameeUI.loading.hide(s), gameeUI.setFullRankings(e)
        }, 500)
      },
      beforeSend: function (e) {
        e.setRequestHeader("Authorization", "Basic " + btoa("web-api:1k2tnlowfvzfjursfhf523fuenc1guzwxfq8jgc8"))
      },
      error: function (e, a) {
        gameeUI.loading.hide(s)
      },
      timeout: 1e4,
      dataType: "json",
      crossDomain: !0
    })
  },
  getStats: function () {
    var e = window.location.pathname, a = gameeUI.user;
    gameeUI.ranksLoading.show();
    var n = {url: escape(e)};
    if (null != gameeUI.anonymous_id && (a = ""), isKik() && (n.username = a), isFacebook()) {
      var s = this;
      FacebookUserData.addAfterLoginCallback(function () {
        n.facebook_user_id = FacebookUserData.getUserData().app_scoped_user_id, s.checkFbStatus(FacebookUserData.getUserData()), FacebookUserData.isLoggedIn() ? s.getSurroundingRankings(n) : ($("#overlay-start .ranks-wrap").addClass("visible"), $(".fb-connect").show(), $("#overlay-start .rankings, #overlay-start .this-share").hide())
      })
    } else this.getSurroundingRankings(n)
  },
  getSurroundingRankings: function (e) {
    var a = getBotsApiUrl() + "/api/game-url-surrounding-ranking", n = $(".rankingsFailed");
    gameeUI.ranksLoading.show(), $("#overlay-start .rankings, #overlay-start .ranks-wrap").addClass("visible"), $.ajax({
      type: "GET",
      url: a,
      data: e,
      success: function (e) {
        gameeUI.ranksLoading.hide(), isEmpty(e.result.ranking) || (gameeUI.setStartRankings(e), isBot() && gameeUI.saveRankingsToObject(e))
      },
      xhrFields: {withCredentials: !0},
      beforeSend: function (e) {
        e.setRequestHeader("Authorization", "Basic " + btoa("web-api:1k2tnlowfvzfjursfhf523fuenc1guzwxfq8jgc8"))
      },
      error: function (e, a) {
        gameeUI.ranksLoading.hide(), n.show(), window.scroller6 || (window.scroller6 = new Scroller("#overlay-start .scrollerWrap", scrollerConfigVertical))
      },
      timeout: 1e4,
      crossDomain: !0
    })
  },
  kikPickFriends: function () {
    kik.pickUsers(function (e) {
      e && e.forEach(function (e) {
        kik.send(e.username, {
          title: "Let's play this game! ;)",
          text: "... " + gameGlobals.game_name + " " + window.location.href,
          pic: gameGlobals.game_img
        })
      })
    })
  }
};
var keys = {37: 1, 38: 1, 39: 1, 40: 1}, webviewProvider = function () {
  return /\/FBIOS/i.test(navigator.userAgent) === !0 ? "fb" : /Twitter for/i.test(navigator.userAgent) === !0 ? "tw" : /\/\/t.co\//i.test(document.referrer) === !0 ? "tw" : null
}();
$(".re-request-friends-permission").on("click", function (e) {
  e.preventDefault(), FacebookUserData.forceRelogin()
}), $(".action-fb-connect").on("click", function (e) {
  e.preventDefault(), FacebookUserData.forceConnect()
}), $(".pauseGame").on("click", function () {
  gameeUI.gamePause()
}), $("#control-restart, .control-fs-restart").on("click touchend", function (e) {
  e.preventDefault(), gameeUI.gameRestart()
}), $("#control-play, .control-fs-play").on("click touchend", function (e) {
  e.preventDefault(), gameeUI.gameBegin()
}), $("#control-resume, .control-fs-resume").on("click", function (e) {
  gameeUI.gameResume()
});
var touchEventStart = "touchstart", touchEventEnd = "touchend";
$("html").hasClass("desktop") && (touchEventStart = "mousedown", touchEventEnd = "mouseup"), $("#control-oneButton").bind(touchEventStart, function (e) {
  Game.buttonButtonDown()
}), $("#control-oneButton").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.buttonButtonUp()
  }, 20)
}), $("#control-arrow-up").bind(touchEventStart, function (e) {
  Game.upButtonDown()
}), $("#control-arrow-up").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.upButtonUp()
  }, 20)
}), $("#control-arrow-down").bind(touchEventStart, function (e) {
  Game.downButtonDown()
}), $("#control-arrow-down").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.downButtonUp()
  }, 20)
}), $("#control-arrow-left").bind(touchEventStart, function (e) {
  Game.leftButtonDown()
}), $("#control-arrow-left").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.leftButtonUp()
  }, 20)
}), $("#control-arrow-right").bind(touchEventStart, function (e) {
  Game.rightButtonDown()
}), $("#control-arrow-right").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.rightButtonUp()
  }, 20)
}), $("#control-buttonA").bind(touchEventStart, function (e) {
  Game.aButtonDown()
}), $("#control-buttonA").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.aButtonUp()
  }, 20)
}), $("#control-buttonB").bind(touchEventStart, function (e) {
  Game.bButtonDown()
}), $("#control-buttonB").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.bButtonUp()
  }, 20)
}), $("#overlay-start .btn-reload").on("click", function (e) {
  var a = $(".rankingsFailed");
  a.hide(), gameeUI.ranksLoading.show(), gameeUI.getStats(), e.preventDefault()
}), $("#overlay-end .btn-reload").on("click", function (e) {
  var a = $(".rankingsFailed");
  a.hide(), gameeUI.ranksLoading.show(), gameeUI.saveScore(gameeUI.score), e.preventDefault()
});
window.onbeforeunload = function (event) {
  window.location.replace(url);
};
function goHome() {
  window.location.replace(url);
}
function hideAlert() {
  $(".alert-danger").css("display", "none");
}
