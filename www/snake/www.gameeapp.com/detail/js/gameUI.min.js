function transformOverlay(e, a) {
  var n = e.innerWidth(), t = e.innerHeight(), s = $("#canvasWrap").height(), r = $("#gameeFrameMobile").width(), o = r / 6.8 / 100, i = s / 5.36 / 100;
  a && (o = Math.min(o, i), i = o);
  var l = Math.round((r - n) / 2);
  Math.round((s - t) / 2 - 50);
  e.css({
    "-webkit-transform": "translate(" + l + "px, 0) scale3d(" + o + ", " + i + ", 1)",
    transform: " translate(" + l + "px, 0) scale3d(" + o + ", " + i + ", 1)"
  })
}
function transformElement(e) {
  var a = e.innerWidth(), t = (e.innerHeight(), $("#canvasWrap").height()), s = $("#gameeFrameMobile").width(), r = s / 6.8 / 100, o = t / 5.36 / 100, i = Math.round((s - a) / 2);
  r = Math.min(r, o), o = r, e.css({
    "-webkit-transform": "translateX(" + i + "px) scale3d(" + r + ", " + o + ", 1)",
    transform: " translateX(" + i + "px) scale3d(" + r + ", " + o + ", 1)"
  })
}
function transformControls(e, a) {
  var n = $("#controller"), t = e.innerWidth(), s = e.innerHeight(), r = (t - 190) / 2.7 / 100, o = s / 2.7 / 100;
  a && (r = Math.min(r, o), o = r), n.css({
    "-webkit-transform": "scale3d(" + r + ", " + o + ", 1)",
    transform: "scale3d(" + r + ", " + o + ", 1)"
  })
}
function transformControls2(e, a) {
  var n = $("#restart"), t = $("#play"), s = $("#control-resume"), r = $(".gameLoading"), o = e.innerWidth(), i = e.innerHeight(), l = o / 2 / 100, c = i / 1.52 / 100;
  a && (l = Math.min(l, c), c = l), l >= 1 && (l = 1, c = 1), n.css({
    "-webkit-transform": "scale3d(" + l + ", " + c + ", 1)",
    transform: "scale3d(" + l + ", " + c + ", 1)"
  }), t.css({
    "-webkit-transform": "scale3d(" + l + ", " + c + ", 1)",
    transform: "scale3d(" + l + ", " + c + ", 1)"
  }), s.css({
    "-webkit-transform": "scale3d(" + l + ", " + c + ", 1)",
    transform: "scale3d(" + l + ", " + c + ", 1)"
  }), r.css({"-webkit-transform": "scale3d(" + l + ", " + c + ", 1)", transform: "scale3d(" + l + ", " + c + ", 1)"})
}
function resizeElements(e, a) {
  var n = document.getElementById("gameeFrameMobile"), t = document.getElementById("canvasWrap"), s = document.getElementById("controls"), r = $(".overlay .inner"), o = $("#overlay-end"), i = $("#overlay-start");
  r.css("max-width", e + "px"), o.css("height", a + "px"), i.css("height", a + "px"), n.width = e, n.height = e, n.style.width = e + "px", n.style.height = e + "px", t.style.height = e + "px", t.style.width = e + "px", s.style.height = a - e + "px", transformOverlay($("#overlay-start .transform"), !0), transformOverlay($("#overlay-end .transform"), !0), transformOverlay($("#ghostModeUI .transform"), !0), transformControls($("#controls"), !0), transformControls2($("#controls"), !0)
}
function preventDefault(e) {
  e = e || window.event, e.preventDefault && e.preventDefault(), e.returnValue = !1
}
function preventDefaultForScrollKeys(e) {
  return keys[e.keyCode] ? (preventDefault(e), !1) : void 0
}
function disableScroll() {
  window.addEventListener && window.addEventListener("DOMMouseScroll", preventDefault, !1), window.onwheel = preventDefault, window.onmousewheel = document.onmousewheel = preventDefault, window.ontouchmove = preventDefault, document.onkeydown = preventDefaultForScrollKeys, document.ontouchmove = function (e) {
    e.preventDefault()
  }, document.addEventListener("touchmove", function (e) {
    e.preventDefault()
  }, !1)
}
function enableScroll() {
  window.removeEventListener && window.removeEventListener("DOMMouseScroll", preventDefault, !1), window.onmousewheel = document.onmousewheel = null, window.onwheel = null, window.ontouchmove = null, document.onkeydown = null, document.ontouchmove = null
}
function defferedSimilarGames() {
  $(".thumb", ".relatedGames").each(function () {
    var e = $(this), a = new Image;
    a.src = e.attr("data-src"), a.onload = function () {
      e.css("background-image", "url(" + e.data("src") + ")")
    }
  })
}
function defferedImg(e) {
  $(".defImg", "" + e).each(function () {
    var e = $(this);
    e.hide(), e.attr("src", e.data("src")), e.on("load", function () {
      e.fadeIn(300), setTimeout(function () {
        e.parent().addClass("loaded")
      }, 305)
    })
  })
}
var Game = {}, GameeBridge = {}, gameeUI = {}, timer, loc = window.localization,url;
window.scrollerConfigHorizontal = {
  scroll: "horizontal",
  lockOnDirection: "vertical"
}, window.scrollerConfigRelatedGames = {
  scroll: "horizontal",
  lockOnDirection: "vertical"
}, window.scrollerConfigVertical = {scroll: "vertical", lockOnDirection: "horizontal"}, Pace.on("done", function () {
  gameeUI.gameLoaded(), resizeElements(window.innerWidth, window.innerHeight), $(".preloader").hide();
  var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
  db.transaction(function (tx) {
    tx.executeSql('SELECT d.val FROM MYGAME d WHERE d.name="score"', [], function (tx, results) {
      var len = results.rows.length, i, result = '';
      if (results.rows && results.rows.length != 0) {
        var a = results.rows.item(0).val.split(",");
        url = a[4];
        gameeUI.gameLoaded(), resizeElements(window.innerWidth, window.innerHeight), $(".preloader").hide();
        var e = $(".gameFrame"), a = $("#gameeFrameMobile");
        navigator.userAgent.toLowerCase();
        a.attr("src", a.data("src")), Game = gameeGame(e[0]), Game2 = gamee2Game(e[0], gameeUI), gameeUI.gameLoader.show(), gameeUI.playBtn.hide(), window.addEventListener("resize", function () {
          resizeElements(document.body.offsetWidth, document.body.offsetHeight)
        })
      }
    });
  });
}), "addEventListener" in document && document.addEventListener("DOMContentLoaded", function () {
  FastClick.attach(document.body)
}, !1), disableScroll(), $(window).on("load", function () {
  var e = $(".gameFrame"), a = $("#gameeFrameMobile");
  a.attr("src", a.data("src")), Game = gameeGame(e[0]), Game2 = gamee2Game(e[0], gameeUI), gameeUI.gameLoader.show(), gameeUI.playBtn.hide(), /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream && setTimeout(function () {
    Pace.stop()
  }, 2e3), $(document).on("click", ".rankings .seeAllBtn", function (e) {
    e.preventDefault(), gameeUI.fullRankings.show()
  }), $(".cRankingsBtn_close").on("click", function (e) {
    e.preventDefault(), gameeUI.fullRankings.hide()
  }), $(".subscribeDialog_close").on("click", function (e) {
    e.preventDefault(), gameeUI.subscribeDialog.hide()
  }), $(".beatenDialog_close").on("click", function (e) {
    e.preventDefault(), gameeUI.beatenDialog.hide()
  }), $(window).on("keypress", function (e) {
    (0 == e.keyCode || 32 == e.keyCode) && ("init" == gameeUI.currentState ? gameeUI.gameBegin() : "gameOver" == gameeUI.currentState && gameeUI.allowReplay && (gameeUI.gameRestart(), gameeUI.allowReplay = !1))
  }), $(".tab-link").on("click", function (e) {
    e.preventDefault();
    var a = $(this), n = a.data("href");
    $(".tab-link").removeClass("active"), a.addClass("active"), $(".tab").removeClass("visible"), $(".tab-" + n).addClass("visible"), ("subscribe" === n || "community" === n) && (0 === gameeUI.gameplayCount && window.scroller6.scrollTo(0, -58, 300), gameeUI.gameplayCount > 0 && window.scroller5.scrollTo(0, -58, 300)), "rankings" === n && (0 === gameeUI.gameplayCount && window.scroller6.scrollTo(0, 0, 300), gameeUI.gameplayCount > 0 && window.scroller5.scrollTo(0, 0, 300))
  }), defferedSimilarGames(), window.addEventListener("resize", function () {
    resizeElements(document.body.offsetWidth, document.body.offsetHeight)
  })
}), window.addEventListener("orientationchange", function () {
  setTimeout(function () {
    resizeElements(document.body.offsetWidth, document.body.offsetHeight)
  }, 500)
}, !1);
var mql = window.matchMedia("(orientation: portrait)");
mql.matches || $("#alert").removeClass("hide").addClass("visible"), mql.addListener(function (e) {
  e.matches ? (enableScroll(), setTimeout(function () {
    resizeElements(document.body.offsetWidth, document.body.offsetHeight), $("#alert").removeClass("visible").addClass("hide")
  }, 1e3), "paused" === gameeUI.currentState && gameeUI.gameResume()) : (disableScroll(), $("#alert").removeClass("hide").addClass("visible"), "playing" === gameeUI.currentState && gameeUI.gamePause())
}), GameeBridge = {
  resume: function () {
    isGamee2() ? Game2.resume() : Game.resume()
  }, start: function () {
    isGamee2() ? Game2.start(!1) : ""
  }, pause: function () {
    isGamee2() ? Game2.pause() : Game.pause()
  }, restart: function () {
    isGamee2() ? Game2.start(!1) : Game.restart()
  }
}, gameeUI = {
  currentState: "init",
  gameMode: "normal",
  user: null,
  anonymous_id: null,
  firstPlay: !0,
  gameHighscore: 0,
  highscoreBeat: !1,
  playTime: 0,
  score: 0,
  myRank: null,
  myPhoto: null,
  gameplayCount: 0,
  offerSubscriptionIn: 5,
  gameeVer: 1,
  onboardingComplete: null,
  changeRank: !1,
  totalCountOfBeatenUsers: 0,
  facebookUserNotSubscribed: null,
  viberUserNotSubscribed: null,
  allowReplay: !1,
  beatenUsers: [],
  allRankings: {},
  gameLoaded: function () {
    var e = $("html");
    $(".gameFrame");
    var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
    db.transaction(function (tx) {
      tx.executeSql('SELECT d.val FROM MYGAME d WHERE d.name="score"', [], function (tx, results) {
        var len = results.rows.length, i, result = '';
        if (results.rows && results.rows.length != 0) {
          var a = results.rows.item(0).val.split(",");
          url = a[4];
          if (a[0] == "false") {
            $(".hideHome").css("display", "none");
          }
        }
      });
    });
    e.addClass("loaded"), gameeUI.startOverlay.show()
  },
  init: function (e, a) {
    console.log("GameeJS - 2: init"), this.gameeVer = 2;
    var n = {
      controller: e.controller,
      capabilities: {saveState: void 0, replayData: void 0, socialData: void 0},
      sound: !0
    };
    a(n)
  },
  gameReady: function () {
    console.log("GameeJS 2: ready"), gameeUI.gameLoader.hide(), gameeUI.playBtn.show()
  },
  requestSocial: function () {
    console.log("GameeJS 2: Socials requested")
  },
  saveState: function () {
    console.log("GameeJS 2: save state")
  },
  gameStart: function () {
    console.log("Game Start"), gameeUI.currentState = "playing", gameeUI.timer.start(), gameeUI.updateScore(0), isGamee2() && GameeBridge.start(!1)
  },
  gameBegin: function () {
    gameeUI.startOverlay.hide(), gameeUI.playBtn.hide(), gameeUI.controls.show(), isGamee2() && gameeUI.gameStart()
  },
  gameOver: function () {
    var e = parseInt($(".totalScore").html());
    parseInt($(".highscore").html());
    gameeUI.currentState = "gameOver", gameeUI.timer.stop();
    var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
    db.transaction(function (tx) {
      tx.executeSql('SELECT d.val FROM MYGAME d WHERE d.name="score"', [], function (tx, results) {
        var len = results.rows.length, i, result = '';
        if (results.rows && results.rows.length != 0) {
          var a = results.rows.item(0).val.split(",");
          if (a[0] == "false" && a[3] === "0") {
            a[3] = e;
            tx.executeSql('UPDATE MYGAME SET val=? WHERE name= "score"', [a.join(",")], function (tx, results) {
              gameeUI.gameplayCount++, window.scroller5 && window.scroller5.scrollToTop(), $("#overlay-end .rankings, #overlay-end .ranks-wrap").removeClass("visible"), gameeUI.currentState = "gameOver", gameeUI.highscoreBeat = !1, gameeUI.onboardingComplete = !0, gameeUI.setScoreCustomText(""), gameeUI.overlay.show(), gameeUI.controls.hide(), $(".rankingsFailed").hide(), setTimeout(function () {
                gameeUI.restartBtn.show()
              }, 500), gameeUI.timer.stop(), $("#control-restart").css("display", "none"), $(".control-fs-restart").css("display", "none")
            });
          } else {
            gameeUI.gameplayCount++, window.scroller5 && window.scroller5.scrollToTop(), $("#overlay-end .rankings, #overlay-end .ranks-wrap").removeClass("visible"), gameeUI.currentState = "gameOver", gameeUI.highscoreBeat = !1, gameeUI.onboardingComplete = !0, gameeUI.setScoreCustomText(""), gameeUI.overlay.show(), gameeUI.controls.hide(), $(".rankingsFailed").hide(), setTimeout(function () {
              gameeUI.restartBtn.show()
            }, 500), gameeUI.saveScore(gameeUI.score), gameeUI.timer.stop(), gameeUI.submitRecord.send(a[1], e, a[2], a[5]);
          }
        }
      });
    });
  },
  gameRestart: function () {
    GameeBridge.restart(), gameeUI.overlay.hide(), gameeUI.controls.show(), gameeUI.restartBtn.hide(), gameeUI.timer.start(), resizeElements(window.innerWidth, window.innerHeight), $("#overlay-end .rankings .item").css("opacity", "0"), $(".ranks-wrap").removeClass("visible")
  },
  gamePause: function () {
    gameeUI.currentState = "paused", GameeBridge.pause(), gameeUI.overlayPause.show(), gameeUI.controls.hide(), gameeUI.resumeBtn.show(), $(".your_score").addClass("paused"), gameeUI.timer.pause()
  },
  gameResume: function () {
    gameeUI.currentState = "playing", gameeUI.overlayPause.hide(), gameeUI.timer.resume(), gameeUI.resumeBtn.hide(), gameeUI.controls.show(), $(".your_score").removeClass("paused"), GameeBridge.resume()
  },
  setController: function (e) {
    gameeUI.gameLoader.hide(), gameeUI.playBtn.show()
  },
  checkFbStatus: function (e) {
    gameeUI.myPhoto = e.photo
  },
  updateScore: function (e) {
    var a = $(".totalScore");
    gameeUI.score = e, a.html(parseInt(e)), gameeUI.checkRankStatus(e)
  },
  updateOverall: function (e) {
    gameGlobals.overallScore = e
  },
  updateHighscore: function (e) {
    gameeUI.score > gameeUI.gameHighscore && (gameeUI.gameHighscore = e, gameeUI.firstPlay = !1)
  },
  checkRankStatus: function (e) {
    var r, a = gameeUI.gameHighscore, n = $(".rankStatus"), t = $(".inner", ".rankStatus"), s = '<div class="highscore"><span class="ic"></span> ' + loc.highscoreBeat + "</div>", o = gameeUI.highscoreBeat, i = gameeUI.allRankings, l = i.length - 1;
    e > a && e > 0 && o === !1 && gameeUI.firstPlay === !1 && (t.html(s), r = !0, gameeUI.highscoreBeat = !0), gameeUI.firstPlay && (gameeUI.highscoreBeat = !0), 0 != Object.keys(i).length && e > i[l].score && (gameeUI.onboardingComplete ? gameeUI.highscoreBeat === !0 && gameeUI.myRank !== i[l].rank && (t.html('<div class="person"><img src="' + addProfilePicture(i[l].profile_picture) + '" class="pic" width="18" /> <span class="name">' + htmlspecialchars(i[l].username) + "</span> " + loc.beat + "</div>"), r = !0) : (t.html('<div class="person"><img src="' + addProfilePicture(i[l].profile_picture) + '" class="pic" width="18" /> <span class="name">' + htmlspecialchars(i[l].username) + "</span> " + loc.beat + "</div>"), r = !0), gameeUI.changeRank = !0, gameeUI.totalCountOfBeatenUsers++, gameeUI.beatenUsers.push(i[l]), i.splice(l)), r && (n.show(), setTimeout(function () {
      n.hide(), r = !1
    }, 2200))
  },
  setScoreCustomText: function (e) {
    $(".custom_text", ".your_score").html(e)
  },
  overlay: {
    show: function () {
      $(window).focus(), $("#canvasWrap").addClass("overlayVisible"), $("#overlay-end").addClass("visible"), $("#controls").addClass("visible")
    }, hide: function () {
      $("#canvasWrap").removeClass("overlayVisible"), $("#overlay-end").removeClass("visible"), $("#controls").removeClass("visible"), $("#gameeFrameMobile").focus()
    }
  },
  overlayPause: {
    show: function () {
      $("#canvasWrap").addClass("overlayVisible"), $("#overlay-pause").addClass("visible"), $("#controls").addClass("visible")
    }, hide: function () {
      $("#canvasWrap").removeClass("overlayVisible"), $("#overlay-pause").removeClass("visible"), $("#controls").removeClass("visible")
    }
  },
  submitRecord: {
    send: function (id, score, token, u) {
      var request = $.ajax({
        url: "https://dagala.cfapps.io/api/1/submitRecord",
        type: "POST",
        contentType: "application/json",
        headers: {"Authorization": token},
        data: JSON.stringify({gameId: id, score: score, user: u})
      });
      request.done(function (msg) {
        var db = openDatabase('mydb', '1.0', 'OMIDDB', 2 * 1024 * 1024);
        db.transaction(function (tx) {
          tx.executeSql('DELETE FROM MYGAME WHERE name="wasInGame"', [], function (tx, results) {
            tx.executeSql('INSERT INTO MYGAME (name, val) VALUES (?, ?)', ["wasInGame", true]);
          });
        });
      });
      request.fail(function (jqXHR, textStatus) {
        $(".alert").css("display", "block");
        setTimeout(function () {
          $(".alert").css("display", "none");
        }, 3000);
      });
    }
  },
  startOverlay: {
    show: function () {
      $(window).focus(), $("#canvasWrap").addClass("overlayVisible"), $("#overlay-start").addClass("visible"), $("#controls").addClass("visible")
    }, hide: function () {
      $("#canvasWrap").removeClass("overlayVisible"), $("#overlay-start").removeClass("visible"), $("#controls").removeClass("visible"), $("#overlay-start .ranks-wrap").removeClass("visible"), $("#gameeFrameMobile").focus()
    }
  },
  controls: {
    show: function () {
      $("#controller").addClass("visible")
    }, hide: function () {
      $("#controller").removeClass("visible")
    }
  },
  loading: {
    show: function (e) {
      e.show()
    }, hide: function (e) {
      e.hide()
    }
  },
  ranksLoading: {
    show: function () {
      $(".spinner", ".rankings").show()
    }, hide: function () {
      $(".spinner", ".rankings").hide()
    }
  },
  shareLoading: {
    show: function () {
      $(".challenge-friends").prepend('<span class="spinner"></span>')
    }, hide: function () {
      $(".spinner", ".challenge-friends").remove()
    }
  },
  gameLoader: {
    show: function () {
      $(".gameLoading").remove(), $("#controls .cWrap").append('<div class="gameLoading"><div class="icn"></div></div>'), $("#overlay-start .inner").append('<div class="gameLoading fs-loading"><div class="icn"></div></div>')
    }, hide: function () {
      $(".gameLoading").remove(), $("#overlay-start .rankings").addClass("loaded").removeClass("loading"), $("#overlay-start .ranks-wrap").addClass("loaded")
    }
  },
  restartBtn: {
    show: function () {
      $(".cLayout.restart, .control-fs-restart").addClass("visible")
    }, hide: function () {
      $(".cLayout.restart, .control-fs-restart").removeClass("visible")
    }
  },
  playBtn: {
    show: function () {
      $(".cLayout.play, .control-fs-play").addClass("visible")
    }, hide: function () {
      $(".cLayout.play, .control-fs-play").removeClass("visible")
    }
  },
  resumeBtn: {
    show: function () {
      $(".cLayout.resume, .control-fs-resume").addClass("visible")
    }, hide: function () {
      $(".cLayout.resume, .control-fs-resume").removeClass("visible")
    }
  },
  fullRankings: {
    show: function () {
      $("#overlay-standing .in").css("max-height", document.body.offsetHeight - 130 + "px"), $("#gameeMobile #overlay-standing").addClass("visible"), gameeUI.getFullRankings()
    }, hide: function () {
      disableScroll(), $("#gameeMobile #overlay-standing").removeClass("visible")
    }
  },
  subscribeDialog: {
    show: function () {
      $("#gameeMobile #overlay-subscribe").addClass("visible")
    }, hide: function () {
      $("#gameeMobile #overlay-subscribe").removeClass("visible")
    }
  },
  connectBtn: {
    show: function () {
      $(".fb-connect").show()
    }, hide: function () {
      $(".fb-connect").hide()
    }
  },
  rankings: {
    show: function () {
      $(".rankings").show()
    }, hide: function () {
      $(".rankings").hide()
    }, scrollAreaShow: function () {
      $(".scrollArea", ".rankings").show()
    }, scrollAreaHide: function () {
      $(".scrollArea", ".rankings").hide()
    }
  },
  beatenDialog: {
    show: function () {
      var t, e = Object.keys(gameeUI.beatenUsers).length, a = gameeUI.beatenUsers, n = "";
      $(".numberOfBeaten", "#overlay-beaten").html(gameeUI.totalCountOfBeatenUsers), $(".rankings .items .item", "#overlay-beaten").remove(), $("#gameeMobile #overlay-beaten").addClass("visible"), $(".myProfileAvatar", "#overlay-beaten").attr("src", gameeUI.myPhoto), $(".myRank", "#overlay-beaten").html(gameeUI.gameHighscore), $(".crown", "#overlay-beaten").addClass("show");
      for (var s in a)n += '<div class="item"><span class="emojiCrying">😭</span><div class="pic_wrap"><img data-src="' + addProfilePicture(a[s].profile_picture) + '" class="pic defImg" onerror="this.style.display=\'none\'" /></div><div class="username"><span>' + formatUsername(a[s].username) + '</span></div><div class="points">' + a[s].score + "</div></div>", 1 === a.length && (t = getFirstName(a[s].username));
      1 === gameeUI.totalCountOfBeatenUsers ? ($(".friendsText", "#overlay-beaten").html(loc.friend), $(".letWho", "#overlay-beaten").html()) : ($(".friendsText", "#overlay-beaten").html(loc.friends), $(".letWho", "#overlay-beaten").html("them")), $("#overlay-beaten .rankings .items").append(n), setTimeout(function () {
        defferedImg("#overlay-beaten")
      }, 100), e > 4 && (window.beatenScroller = new Scroller("#overlay-beaten .scrollArea", scrollerConfigHorizontal))
    }, hide: function () {
      $("#gameeMobile #overlay-beaten").removeClass("visible"), window.beatenScroller && (window.beatenScroller.destroy(), $("#overlay-beaten .scrollerWrap").removeClass("scroller-wrapper scroll-vertical"), $("#overlay-beaten .scrollerIn").removeClass("scroller"), $("#overlay-beaten .scrollerIn").removeAttr("style"))
    }
  },
  timer: {
    start: function () {
      timer = setInterval(function () {
        ++gameeUI.playTime
      }, 1e3)
    }, pause: function () {
      clearTimeout(timer)
    }, resume: function () {
      timer = setInterval(function () {
        ++gameeUI.playTime
      }, 1e3)
    }, stop: function () {
      clearTimeout(timer), gameeUI.playTime = 0
    }
  },
  sendMixpanel: function (e) {
  },
  sendMixpanelShare: function (e, a, n, t) {
  },
  sendMixpanelSubscribeAction: function (e) {
  },
  setGameOverRankings: function (e) {

  },
  setStartRankings: function (e) {
  },
  saveScore: function (e) {
  },
  sendScoreData: function (e) {
  },
  setFullRankings: function (e) {
  },
  saveRankingsToObject: function (e) {
  },
  getFullRankings: function () {
  },
  getStats: function () {
  },
  getSurroundingRankings: function (e) {
  },
  kikPickFriends: function () {

  }
};

$(".pauseGame").on("click", function () {
  gameeUI.gamePause()
}), $("#control-restart, .control-fs-restart").on("click touchend", function (e) {
  e.preventDefault(), gameeUI.gameRestart()
}), $("#control-play, .control-fs-play").on("click touchend", function (e) {
  e.preventDefault(), gameeUI.gameBegin()
}), $("#control-resume, .control-fs-resume").on("click", function (e) {
  gameeUI.gameResume()
});
var touchEventStart = "touchstart", touchEventEnd = "touchend";
$("html").hasClass("desktop") && (touchEventStart = "mousedown", touchEventEnd = "mouseup"), $("#control-oneButton").bind(touchEventStart, function (e) {
  Game.buttonButtonDown()
}), $("#control-oneButton").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.buttonButtonUp()
  }, 20)
}), $("#control-arrow-up").bind(touchEventStart, function (e) {
  Game.upButtonDown()
}), $("#control-arrow-up").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.upButtonUp()
  }, 20)
}), $("#control-arrow-down").bind(touchEventStart, function (e) {
  Game.downButtonDown()
}), $("#control-arrow-down").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.downButtonUp()
  }, 20)
}), $("#control-arrow-left").bind(touchEventStart, function (e) {
  Game.leftButtonDown()
}), $("#control-arrow-left").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.leftButtonUp()
  }, 20)
}), $("#control-arrow-right").bind(touchEventStart, function (e) {
  Game.rightButtonDown()
}), $("#control-arrow-right").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.rightButtonUp()
  }, 20)
}), $("#control-buttonA").bind(touchEventStart, function (e) {
  Game.aButtonDown()
}), $("#control-buttonA").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.aButtonUp()
  }, 20)
}), $("#control-buttonB").bind(touchEventStart, function (e) {
  Game.bButtonDown()
}), $("#control-buttonB").bind(touchEventEnd, function (e) {
  setTimeout(function () {
    Game.bButtonUp()
  }, 20)
}), $("#overlay-start .btn-reload").on("click", function (e) {
  var a = $(".rankingsFailed");
  a.hide(), gameeUI.ranksLoading.show(), gameeUI.getStats(), e.preventDefault()
}), $("#overlay-end .btn-reload").on("click", function (e) {
  var a = $(".rankingsFailed");
  a.hide(), gameeUI.ranksLoading.show(), gameeUI.saveScore(gameeUI.score), e.preventDefault()
});
window.onbeforeunload = function (event) {
  window.location.replace(url);
};
function goHome() {
  window.location.replace(url);
}
function hideAlert() {
  $(".alert-danger").css("display", "none");
}
